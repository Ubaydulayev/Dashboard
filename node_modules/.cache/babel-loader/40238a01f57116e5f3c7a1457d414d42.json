{"ast":null,"code":"import { getUsers } from \"../api\";\nimport { SET_ERROR, SET_LOADING, SET_USERS } from \"./types\";\n\nconst setUsers = async dispatch => {\n  setLoading(dispatch);\n  const res = await getUsers();\n\n  if (res.success) {\n    const action = {\n      type: SET_USERS,\n      payload: res.data\n    };\n    dispatch(action);\n  } else {\n    setError(dispatch);\n  }\n};\n\nconst setLoading = dispatch => {\n  dispatch({\n    type: SET_LOADING\n  });\n};\n\nconst setError = dispatch => {\n  dispatch({\n    type: SET_ERROR\n  });\n};\n\nexport { setUsers, setLoading, setError };","map":{"version":3,"sources":["/Users/dostonbekubaydullayev/Desktop/Dashboard/src/redux/actions.js"],"names":["getUsers","SET_ERROR","SET_LOADING","SET_USERS","setUsers","dispatch","setLoading","res","success","action","type","payload","data","setError"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,SAAlD;;AAEA,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACjCC,EAAAA,UAAU,CAACD,QAAD,CAAV;AACA,QAAME,GAAG,GAAG,MAAMP,QAAQ,EAA1B;;AAEA,MAAIO,GAAG,CAACC,OAAR,EAAiB;AACb,UAAMC,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAEP,SAAR;AAAmBQ,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAAhC,KAAf;AACAP,IAAAA,QAAQ,CAACI,MAAD,CAAR;AACH,GAHD,MAIK;AACDI,IAAAA,QAAQ,CAACR,QAAD,CAAR;AACH;AACJ,CAXD;;AAaA,MAAMC,UAAU,GAAID,QAAD,IAAc;AAC7BA,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACH,CAFD;;AAIA,MAAMW,QAAQ,GAAIR,QAAD,IAAc;AAC3BA,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;AACH,CAFD;;AAIA,SAASG,QAAT,EAAmBE,UAAnB,EAA+BO,QAA/B","sourcesContent":["import { getUsers } from \"../api\"\nimport { SET_ERROR, SET_LOADING, SET_USERS } from \"./types\"\n\nconst setUsers = async (dispatch) => {\n    setLoading(dispatch);\n    const res = await getUsers();\n\n    if (res.success) {\n        const action = { type: SET_USERS, payload: res.data }\n        dispatch(action);\n    }\n    else {\n        setError(dispatch);\n    }\n}\n\nconst setLoading = (dispatch) => {\n    dispatch({ type: SET_LOADING })\n}\n\nconst setError = (dispatch) => {\n    dispatch({ type: SET_ERROR })\n}\n\nexport { setUsers, setLoading, setError }"]},"metadata":{},"sourceType":"module"}