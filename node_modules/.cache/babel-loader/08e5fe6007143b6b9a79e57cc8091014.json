{"ast":null,"code":"import { getUserByID, getUsers } from \"../../api\";\nimport { dispatch } from \"../store\";\nimport { SET_USERS, SET_USER } from \"../types\";\nimport { setError, setLoading } from \"./globalActions\";\n\nconst setUsers = async () => {\n  setLoading(true);\n  const res = await getUsers();\n  setLoading(false);\n\n  if (res.success) {\n    const action = {\n      type: SET_USERS,\n      payload: res.data\n    };\n    dispatch(action);\n  } else {\n    setError(true);\n  }\n};\n\nconst setUser = async id => {\n  setLoading(true);\n  const res = await getUserByID(id);\n  setLoading(false);\n\n  if (res.success) {\n    const action = {\n      type: SET_USER,\n      payload: res.data\n    };\n    dispatch(action);\n  } else {\n    setError(true);\n  }\n};\n\nexport { setUsers, setUser };","map":{"version":3,"sources":["/Users/dostonbekubaydullayev/Desktop/Dashboard/src/redux/actions/usersActions.js"],"names":["getUserByID","getUsers","dispatch","SET_USERS","SET_USER","setError","setLoading","setUsers","res","success","action","type","payload","data","setUser","id"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,WAAtC;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,UAApC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,iBAArC;;AAEA,MAAMC,QAAQ,GAAG,YAAY;AACzBD,EAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAME,GAAG,GAAG,MAAMP,QAAQ,EAA1B;AACAK,EAAAA,UAAU,CAAC,KAAD,CAAV;;AAEA,MAAIE,GAAG,CAACC,OAAR,EAAiB;AACb,UAAMC,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAER,SAAR;AAAmBS,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAAhC,KAAf;AACAX,IAAAA,QAAQ,CAACQ,MAAD,CAAR;AACH,GAHD,MAIK;AACDL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,CAZD;;AAcA,MAAMS,OAAO,GAAG,MAAOC,EAAP,IAAc;AAC1BT,EAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAME,GAAG,GAAG,MAAMR,WAAW,CAACe,EAAD,CAA7B;AACAT,EAAAA,UAAU,CAAC,KAAD,CAAV;;AAEA,MAAIE,GAAG,CAACC,OAAR,EAAiB;AACb,UAAMC,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAEP,QAAR;AAAkBQ,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAA/B,KAAf;AACAX,IAAAA,QAAQ,CAACQ,MAAD,CAAR;AACH,GAHD,MAIK;AACDL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,CAZD;;AAcA,SAASE,QAAT,EAAmBO,OAAnB","sourcesContent":["import { getUserByID, getUsers } from \"../../api\";\nimport { dispatch } from \"../store\";\nimport { SET_USERS, SET_USER } from \"../types\";\nimport { setError, setLoading } from \"./globalActions\";\n\nconst setUsers = async () => {\n    setLoading(true);\n    const res = await getUsers();\n    setLoading(false);\n\n    if (res.success) {\n        const action = { type: SET_USERS, payload: res.data }\n        dispatch(action);\n    }\n    else {\n        setError(true);\n    }\n}\n\nconst setUser = async (id) => {\n    setLoading(true);\n    const res = await getUserByID(id);\n    setLoading(false);\n\n    if (res.success) {\n        const action = { type: SET_USER, payload: res.data }\n        dispatch(action);\n    }\n    else {\n        setError(true);\n    }\n}\n\nexport { setUsers, setUser }"]},"metadata":{},"sourceType":"module"}